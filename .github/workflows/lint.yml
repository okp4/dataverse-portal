name: Lint

on:
  push:
    branches: [main]

  pull_request:
    branches: [main]

  workflow_dispatch:

concurrency:
  group: lint-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-commits:
    runs-on: ubuntu-22.04
    if: (github.actor != 'dependabot[bot]') && !startsWith(github.head_ref, 'dependabot/')
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check commits
        uses: wagoid/commitlint-github-action@v5

  lint-markdown:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Lint markdown files
        uses: avto-dev/markdown-lint@v1.5.0
        with:
          args: "**/*.md"
          ignore: "./CHANGELOG.md"

  lint-yaml:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Lint yaml files
        uses: ibiqlik/action-yamllint@v3.1.1

  lint-dockerfile:
    runs-on: ubuntu-22.04
    if: github.actor != 'dependabot[bot]'
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Lint dockerfile (hadolint)
        uses: hadolint/hadolint-action@v3.1.0

  lint-json:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Lint json files
        run: |
          sudo apt install -y jsonlint
          find ./ -type f -name "*.json" -exec sh -c '
            for file do
              if ! jsonlint-php -q "$file"; then
                echo "‚ùå $file"
                export FAILED=1
              else
                echo "‚úÖ $file"
              fi
            done
            if [ "${FAILED}" = "1" ]; then
              exit 1
            fi
          ' sh {} +

  lint-ts:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.3.0

      - name: Setup node environment (for building)
        uses: actions/setup-node@v4
        with:
          node-version: 16.19
          cache: "pnpm"

      - name: Fetch dependencies
        run: |
          pnpm install --frozen-lockfile

      - name: Lint typescript
        run: |
          pnpm lint

  lint-web:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.3.0

      - name: Setup node environment (for building)
        uses: actions/setup-node@v4
        with:
          node-version: 16.19
          cache: "pnpm"

      - name: Fetch dependencies
        run: |
          pnpm install --frozen-lockfile

      - name: Start web server
        run: |
          pnpm build
          pnpm preview &
          sleep 2

      - name: Create artifacts directory
        run: |
          mkdir -p ${{ github.workspace }}/tmp/artifacts/desktop
          mkdir -p ${{ github.workspace }}/tmp/artifacts/mobile

      - name: Run Lighthouse
        uses: foo-software/lighthouse-check-action@v10.0.0
        with:
          prCommentEnabled: true
          maxRetries: 2
          outputDirectory: ${{ github.workspace }}/tmp/artifacts/mobile
          device: all
          urls: >-
            http://localhost:4173/
          gitHubAccessToken: ${{ secrets.OKP4_TOKEN }}

      - name: Upload lighthouse reports
        uses: actions/upload-artifact@v3.1.3
        with:
          name: Lighthouse reports
          path: ${{ github.workspace }}/tmp/artifacts

      - name: Stop web server
        if: always()
        run: |
          kill $(lsof -t -i:4173)

  lint-branch-name:
    runs-on: ubuntu-22.04
    if: github.actor != 'dependabot[bot]' && github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'reopened')
    steps:
      - name: Check branch name conventions
        uses: AlbertHernandez/branch-name-action@v1.0.2
        with:
          branch_pattern: "feat|fix|build|ci|docs|style|refactor|perf|test|chore"
          comment_for_invalid_branch_name: |
            üôã‚Äç Oops! This branch name does not follow the naming convention.

            <hr>

            Please, see the following branch naming convention:

            Branch naming convention | Purpose
            ------------------------ | -------
            `feat/**`                | A new feature
            `fix/**`                 | A bug fix
            `build/**`               | Changes that affect the build system (npm, mavem, poetry)
            `ci/**`                  | Changes to the CI configuration
            `docs/**`                | Documentation only changes
            `style/**`               | Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)
            `refactor/**`            | Code changes that neither fixe a bug nor adds a feature
            `perf/**`                | Code changes that improve performance
            `test/**`                | When adding tests or correcting existing tests
            `chore/**`               | Other changes that don't modify source
          fail_if_invalid_branch_name: "true"
          ignore_branch_pattern: "main"
      - name: Close non-compliant branch
        if: ${{ failure() }}
        uses: codelytv/no-pull-requests@v1
        with:
          GITHUB_TOKEN: ${{ secrets.OKP4_TOKEN }}
          message: üôÖ Closing the PR because it does not respect naming conventions. Edit the branch name and submit a new PR.
    env:
      GITHUB_TOKEN: ${{ secrets.OKP4_TOKEN }}
